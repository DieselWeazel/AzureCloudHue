trigger:
  - '*'
  - 

pool:
  # TODO undersök om vilken vm image som ger bäst resultat, windows-2022 eller ubuntu-20.04?
  vmImage: 'ubuntu-20.04'

variables:
  buildConfiguration: 'Release'
  #wwwrootDir: 'NOT_USED_YET'
  dotnetSDKVersion: '5.x'
  # Används ej än, men kan vara användbar
  #solution: '**/*.sln'
  WebAppName: 'AzureCloudHue-Harren'
  # Den här refererar till Azure Resource Managern som finns här i DevOps under Service Connections
  AzureSub: 'Trial Account Subscription'
  vmImage: 'ubuntu-20.04'
  
stages:
  - stage: 'Build'
    displayName: 'Build WebAPI Application'
    jobs:
      - job: 'Build'
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET SDK $(dotnetSDKVersion)'
            inputs:
              packageType: sdk
              version: '$(dotnetSDKVersion)'
        
          - task: DotNetCoreCLI@2
            displayName: 'Restore'
            inputs:
              command: restore
              projects: '**/*.csproj'
        
          - task: DotNetCoreCLI@2
            displayName: 'Build'
            inputs:
              command: build
              arguments: '--no-restore --configuration Release'
              # TODO testprojektet bör väl bara byggas, före bygget av själva API:t?
              # projects: 'AzureCloudHueAPI/*.csproj'
              projects: '**/*.csproj'
        
          - task: DotNetCoreCLI@2
            displayName: 'Publish'
            inputs:
              command: publish
              projects: 'AzureCloudHueAPI/*.csproj'
              publishWebProjects: false
              #      arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
              arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
              zipAfterPublish: true
        
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: drop'
            # Denna ska vara given, men lämnar ifall att.
            #condition: succeeded()

  - stage: 'Deploy'
    displayName: 'Deploy to Azure'
    dependsOn: Build
    jobs:
      - deployment: Deploy
        pool:
          vmImage: $(vmImage)
        environment: dev
        strategy:
          runOnce:
            deploy:
              steps:
                #- download: current
                #  artifact: drop
                - task: DownloadPipelineArtifact@2
                  inputs:
                    artifact: 'drop'
                    targetPath: '$(Pipeline.Workspace)'
                    #targetPath: '$(Build.ArtifactStagingDirectory)'
                - task: AzureWebApp@1
                  displayName: 'Azure App Service Deploy: website'
                  inputs:
                    # TODO change Azure Subscription
                    azureSubscription: '$(AzureSub)'
                    resourceGroupName: 'cloud-shell-storage-westeurope'
                    appType: webApp
                    appName: '$(WebAppName)'
                    package: '$(Pipeline.Workspace)/*.zip'
                    #package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
                    #package: '$(Pipeline.Workspace)/drop.zip'